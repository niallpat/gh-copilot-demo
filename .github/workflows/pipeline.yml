# Github Action pipeline that runs on push to main branch
# Docker build and push the album-api image to ACR

name: Pipeline

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Login to Azure
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Build and push Docker image
      run: |
        docker build -t album-api .
        docker tag album-api ${{ secrets.ACR_NAME }}.azurecr.io/album-api
        docker push ${{ secrets.ACR_NAME }}.azurecr.io/album-api
        
    # tags the image with the github run id and push to docker hub (optional)
    - name: Build and push Docker image to Docker Hub
      run: |
        docker tag album-api ${{ secrets.DOCKER_HUB_USERNAME }}/album-api:${{ github.run_id }}
        docker push ${{ secrets.DOCKER_HUB_USERNAME }}/album-api:${{ github.run_id }}

    # run tests on the album-api image
    - name: Run tests
      run: |
        docker run -d -p 8080:8080 --name album-api ${{ secrets.ACR_NAME }}.azurecr.io/album-api
        sleep 10
        curl -s http://localhost:8080/albums | grep -q "albums"
        docker stop album-api
        docker rm album-api

    # deploy the album-api image to the dev AKS cluster
    - name: Deploy to dev
      run: |
        az aks get-credentials --resource-group ${{ secrets.AKS_RESOURCE_GROUP }} --name ${{ secrets.AKS_CLUSTER_NAME }} --overwrite-existing
        kubectl set image deployment/album-api album-api=${{ secrets.ACR_NAME }}.azurecr.io/album-api

    # find and replace the %%VERSION%% by the github action run id in every appmanifest.yml file
    - name: Find and replace version
      run: |
        sed -i "s/%%VERSION%%/${{ github.run_id }}/g" ./k8s/dev/appmanifest.yml